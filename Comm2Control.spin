{  Project: EE-18 Assignment  Platform: Parallax Project USB Board  Revision: 1.2  Author: Teo Xin Yi  Date: 5th Mar 2022  Log:        Date: Desc        24/2/2022: Include checksum        5/3/2022:  Remove verification of direction        16/3/2022: Integration}CON  commRxPin     = 19 'DOUT  commTxPin     = 18 'DIN  commBaud      = 115200  'Comm Hex Keys  commStart     = $7A  { v1.1: remove hex key used for direction verification here  commRight     = $01  commLeft      = $02  commForward   = $03  commReverse   = $04  commDiagNE    = $05  commDiagSW    = $06  commDiagNW    = $07  commDiagSE    = $08  commSideLeft  = $09  commSideRight = $10  commStopAll   = $AA }  commErr       = $EE  commAck       = $AC  encryptkey    = $7FVAR  long  cogIDNum, cogStack[128], _Ms_001, rxHeader, rxDir, rxSpd, rxChecksumOBJ  Comm2      : "FullDuplexSerial.spin"                   'UART communication for Control  'Term          : "FullDuplexSerial.spin"PUB Start(msVal, dirVal, speed)       'Core 3   _Ms_001 := MSVal   'stores number of milliseconds which will be used by Pause function  StopCore      'stops cog  cogIDNum := cognew(commCore(dirVal, speed),@cogStack)   'cog that runs the ValueGiven function  returnPUB StopCore       'Stops cog if cog3ID is called  if cogIDNum    cogstop(cogIDNum)PUB commCore(dirVal, speed) | CKC, DS  Comm2.Start(commRxPin,commTxPin,0,commBaud)  'Term.Start(31,30,0,230400)  Pause(3000)  ' Run & get readings  repeat    rxHeader := Comm2.Rx  '<- Wait at this statement for a byte    if (rxHeader == CommStart)                                                  ' v1.1: To make checksum correct      rxDir := Comm2.Rx      rxSpd := Comm2.Rx      rxChecksum := Comm2.Rx      CKC := rxChecksum ^ encryptkey      DS := rxDir ^ rxSpd      if (DS == CKC)        Comm2.Tx(commAck)        long[dirVal] := rxDIR        long[speed] := rxSpd      else        Comm2.Tx(commErr)PRI Pause(ms) | t    'Pause Function  t := cnt - 1088  repeat(ms #> 0)    waitcnt(t += _Ms_001)  return